#!/usr/bin/env bash
#
# Copyright (C) 2021 a xyzprjkt property
#

# Main
export LOCALVERSION=X2.0-Lite
DEVICE_DEFCONFIG=merlin_defconfig
MainPath=$(pwd)
MainClangPath=${MainPath}/clang
MainClangZipPath=${MainPath}/clang-zip
ClangPath=${MainClangZipPath}
GCCaPath=${MainPath}/GCC64
GCCbPath=${MainPath}/GCC32
MainZipGCCaPath=${MainPath}/GCC64-zip
MainZipGCCbPath=${MainPath}/GCC32-zip
GCCcPath=${MainPath}/GCC64+
GCCdPath=${MainPath}/GCC32+
MainZipGCCcPath=${MainPath}/GCC64z-zip
MainZipGCCdPath=${MainPath}/GCC32z-zip
KERNELNAME=Sea.Kernel
export KBUILD_BUILD_USER=Asyanx
export KBUILD_BUILD_HOST=#ZpyLab
IMAGE=$(pwd)/la/out/arch/arm64/boot/Image.gz
DTBO=$(pwd)/la/out/arch/arm64/boot/dtbo.img
DTB=$(pwd)/la/out/arch/arm64/boot/dts/mediatek/mt6768.dtb

DATE=$(date +"%F-%S")
START=$(date +"%s")
PATH=${GCCcPath}/bin:${GCCdPath}/bin:/usr/bin:${PATH}

# Telegram
export BOT_MSG_URL="https://api.telegram.org/bot$TG_TOKEN/sendMessage"

tg_post_msg() {
  curl -s -X POST "$BOT_MSG_URL" -d chat_id="$TG_CHAT_ID" \
  -d "disable_web_page_preview=true" \
  -d "parse_mode=html" \
  -d text="$1"

}

# ClangInfo
clanginfo(){
CLANG_VER="$("$ClangPath"/bin/clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
LLD_VER="$("$ClangPath"/bin/ld.lld --version | head -n 1)"
export KBUILD_COMPILER_STRING="$CLANG_VER with $LLD_VER"
}

# Compile
compile(){
tg_post_msg "<b>xKernelCompiler:</b><code>Compile Kernel DI Mulai</code>"
cd la
make -j$(nproc) O=out ARCH=arm64 $DEVICE_DEFCONFIG
make -j$(nproc) ARCH=arm64 O=out \
    CROSS_COMPILE=aarch64-none-elf- \
    CROSS_COMPILE_ARM32=arm-none-linux-gnueabihf-

   if ! [ -a "$IMAGE" ]; then
	finerr
	exit 1
   fi
  git clone --depth=1 $ANYKERNEL AnyKernel 
	cp $IMAGE AnyKernel
}

# Push kernel to channel
function push() {
    cd AnyKernel
    ZIP=$(echo *.zip)
    curl -F document=@$ZIP "https://api.telegram.org/bot$TG_TOKEN/sendDocument" \
        -F chat_id="$TG_CHAT_ID" \
        -F "disable_web_page_preview=true" \
        -F "parse_mode=html" \
        -F caption="Compile took $(($DIFF / 60)) minute(s) and $(($DIFF % 60)) second(s). | For <b>$DEVICE_CODENAME</b> | <b>${KBUILD_COMPILER_STRING}</b>"
}

# Fin Error
function finerr() {
    curl -s -X POST "https://api.telegram.org/bot$TG_TOKEN/sendMessage" \
        -d chat_id="$TG_CHAT_ID" \
        -d "disable_web_page_preview=true" \
        -d "parse_mode=markdown" \
        -d text="Build throw an error(s)"
    exit 1
}

# Zipping
function zipping() {
    cd AnyKernel || exit 1
    zip -r9 [$LOCALVERSION]$KERNELNAME[Merlin]$DATE.zip *
    cd ..
}
#clanginfo
compile
zipping
END=$(date +"%s")
DIFF=$(($END - $START))
push
